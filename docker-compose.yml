services:
  zookeeper:
    image: zookeeper:3.7.1
    ports:
      - "2181:2181"
    networks:
      - demo-net

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - demo-net

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - demo-net

  spark-worker-1:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - demo-net

  airflow:
    image: apache/airflow:2.7.1-python3.8
    environment:
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    ports:
      - "8082:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./airflow.cfg:/opt/airflow/airflow.cfg # Adicione o arquivo airflow.cfg aqui
    # command: webserver # Especifica o comando para iniciar o webserver do Airflow
    # entrypoint: [ "airflow", "db", "init" ] # Adicione isto para inicializar o banco de dados
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "airflow db upgrade && airflow webserver"
      ]
    depends_on:
      - postgres
    networks:
      - demo-net

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    networks:
      - demo-net

  presto:
    image: prestodb/presto:latest
    ports:
      - "8083:8080"
    volumes:
      - ./presto/templates:/etc/presto/templates
      - ./presto/entrypoint.sh:/usr/local/bin/entrypoint.sh
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    entrypoint: [ "/bin/bash", "/usr/local/bin/entrypoint.sh" ]
    command: [ "presto-server", "run" ]
    networks:
      - demo-net

  jupyter:
    build: ./jupyter
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    ports:
      - "8888:8888"
    networks:
      - demo-net
    volumes:
      - ./jupyter/work:/home/jovyan/work
      - ./jupyter/data:/home/jovyan/data
    depends_on:
      - spark-master
      - spark-worker-1
    env_file:
      - .env

  adminer:
    image: adminer:latest
    ports:
      - "8084:8080"
    networks:
      - demo-net

networks:
  demo-net:
